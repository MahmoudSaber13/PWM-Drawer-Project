
PWM_ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000462  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000004b6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004e8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000524  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008e7  00000000  00000000  000005a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000723  00000000  00000000  00000e8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004e7  00000000  00000000  000015ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000ac  00000000  00000000  00001a98  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b2  00000000  00000000  00001b44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000b4  00000000  00000000  00001ef6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00001faa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 58 00 	call	0xb0	; 0xb0 <main>
  64:	0c 94 2f 02 	jmp	0x45e	; 0x45e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <adc_init>:


/*****ADC INITIALIZATION******/
void adc_init()
{
	ADMUX |= (1<<REFS0);
  6c:	87 b1       	in	r24, 0x07	; 7
  6e:	80 64       	ori	r24, 0x40	; 64
  70:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADEN)|(1<<ADPS2);
  72:	86 b1       	in	r24, 0x06	; 6
  74:	84 68       	ori	r24, 0x84	; 132
  76:	86 b9       	out	0x06, r24	; 6
  78:	08 95       	ret

0000007a <adc_read>:

/*This function is used to read the value of the adc or sensor signal*/
int adc_read(int adc_chan)
{
	int adc_val=0;
	ADMUX = (ADMUX & 0xE0) | (adc_chan);
  7a:	97 b1       	in	r25, 0x07	; 7
  7c:	90 7e       	andi	r25, 0xE0	; 224
  7e:	89 2b       	or	r24, r25
  80:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC);
  82:	86 b1       	in	r24, 0x06	; 6
  84:	80 64       	ori	r24, 0x40	; 64
  86:	86 b9       	out	0x06, r24	; 6
	while((readbit(ADCSRA,ADIF))==0);
  88:	34 9b       	sbis	0x06, 4	; 6
  8a:	fe cf       	rjmp	.-4      	; 0x88 <adc_read+0xe>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8c:	83 e0       	ldi	r24, 0x03	; 3
  8e:	8a 95       	dec	r24
  90:	f1 f7       	brne	.-4      	; 0x8e <adc_read+0x14>
  92:	00 00       	nop
	_delay_us(10);
	adc_val = (int)ADCL + (int)ADCH*256;
  94:	24 b1       	in	r18, 0x04	; 4
  96:	85 b1       	in	r24, 0x05	; 5
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	98 2f       	mov	r25, r24
  9c:	88 27       	eor	r24, r24
	return adc_val;
}
  9e:	82 0f       	add	r24, r18
  a0:	91 1d       	adc	r25, r1
  a2:	08 95       	ret

000000a4 <PWM_init>:


/*This function is used to generate PWM signal*/
void PWM_init()
{
	TCCR0= (1<<WGM00)|(1<<WGM01)|(1<<COM01)|(1<<CS00);
  a4:	89 e6       	ldi	r24, 0x69	; 105
  a6:	83 bf       	out	0x33, r24	; 51
	DDRB |= (1<<PB3);
  a8:	87 b3       	in	r24, 0x17	; 23
  aa:	88 60       	ori	r24, 0x08	; 8
  ac:	87 bb       	out	0x17, r24	; 23
  ae:	08 95       	ret

000000b0 <main>:


int main(void)
{
   
    clearbit(DDRA,4);
  b0:	8a b3       	in	r24, 0x1a	; 26
  b2:	8f 7e       	andi	r24, 0xEF	; 239
  b4:	8a bb       	out	0x1a, r24	; 26
	adc_init();
  b6:	0e 94 36 00 	call	0x6c	; 0x6c <adc_init>
	UART_INIT(6);
  ba:	86 e0       	ldi	r24, 0x06	; 6
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 89 00 	call	0x112	; 0x112 <UART_INIT>
	
	unsigned char w;
	
    while (1) 
    {
		PWM_init();
  c2:	0e 94 52 00 	call	0xa4	; 0xa4 <PWM_init>
		d= adc_read(4);
  c6:	84 e0       	ldi	r24, 0x04	; 4
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	0e 94 3d 00 	call	0x7a	; 0x7a <adc_read>
		OCR0= (d*0.09765)+0.5;
  ce:	bc 01       	movw	r22, r24
  d0:	99 0f       	add	r25, r25
  d2:	88 0b       	sbc	r24, r24
  d4:	99 0b       	sbc	r25, r25
  d6:	0e 94 36 01 	call	0x26c	; 0x26c <__floatsisf>
  da:	29 eb       	ldi	r18, 0xB9	; 185
  dc:	3c ef       	ldi	r19, 0xFC	; 252
  de:	47 ec       	ldi	r20, 0xC7	; 199
  e0:	5d e3       	ldi	r21, 0x3D	; 61
  e2:	0e 94 c2 01 	call	0x384	; 0x384 <__mulsf3>
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	40 e0       	ldi	r20, 0x00	; 0
  ec:	5f e3       	ldi	r21, 0x3F	; 63
  ee:	0e 94 99 00 	call	0x132	; 0x132 <__addsf3>
  f2:	0e 94 05 01 	call	0x20a	; 0x20a <__fixunssfsi>
  f6:	6c bf       	out	0x3c, r22	; 60
		w= OCR0;
  f8:	8c b7       	in	r24, 0x3c	; 60
		UART_sendchar(w);
  fa:	0e 94 92 00 	call	0x124	; 0x124 <UART_sendchar>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fe:	2f e3       	ldi	r18, 0x3F	; 63
 100:	8d e0       	ldi	r24, 0x0D	; 13
 102:	93 e0       	ldi	r25, 0x03	; 3
 104:	21 50       	subi	r18, 0x01	; 1
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x54>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x5e>
 10e:	00 00       	nop
 110:	d8 cf       	rjmp	.-80     	; 0xc2 <main+0x12>

00000112 <UART_INIT>:


/**********UART INITIALIZATION***********/
void UART_INIT(unsigned int baud)
{
	UCSRB |= (1 << RXEN) | (1 << TXEN);				// Enable UART transmitter and receiver
 112:	2a b1       	in	r18, 0x0a	; 10
 114:	28 61       	ori	r18, 0x18	; 24
 116:	2a b9       	out	0x0a, r18	; 10
	UCSRC |= (1 << URSEL)| (1 << UCSZ0) | (1 << UCSZ1);	//8 bit data and 1 stop bit
 118:	20 b5       	in	r18, 0x20	; 32
 11a:	26 68       	ori	r18, 0x86	; 134
 11c:	20 bd       	out	0x20, r18	; 32
	UBRRL = baud;
 11e:	89 b9       	out	0x09, r24	; 9
	UBRRH = (baud >> 8);
 120:	90 bd       	out	0x20, r25	; 32
 122:	08 95       	ret

00000124 <UART_sendchar>:


/*This function is used to send 1 byte of data*/
void UART_sendchar(unsigned char data)
{
	while(readbit(UCSRA,UDRE)==0)// wait the reg to be empty
 124:	5d 9b       	sbis	0x0b, 5	; 11
 126:	fe cf       	rjmp	.-4      	; 0x124 <UART_sendchar>
	{	;	}
	UDR = data; // send  data
 128:	8c b9       	out	0x0c, r24	; 12
	while(readbit(UCSRA,TXC)==0)// wait till the data to be send
 12a:	5e 9b       	sbis	0x0b, 6	; 11
 12c:	fe cf       	rjmp	.-4      	; 0x12a <UART_sendchar+0x6>
	{	;	}
}
 12e:	08 95       	ret

00000130 <__subsf3>:
 130:	50 58       	subi	r21, 0x80	; 128

00000132 <__addsf3>:
 132:	bb 27       	eor	r27, r27
 134:	aa 27       	eor	r26, r26
 136:	0e 94 b0 00 	call	0x160	; 0x160 <__addsf3x>
 13a:	0c 94 88 01 	jmp	0x310	; 0x310 <__fp_round>
 13e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <__fp_pscA>
 142:	38 f0       	brcs	.+14     	; 0x152 <__addsf3+0x20>
 144:	0e 94 81 01 	call	0x302	; 0x302 <__fp_pscB>
 148:	20 f0       	brcs	.+8      	; 0x152 <__addsf3+0x20>
 14a:	39 f4       	brne	.+14     	; 0x15a <__addsf3+0x28>
 14c:	9f 3f       	cpi	r25, 0xFF	; 255
 14e:	19 f4       	brne	.+6      	; 0x156 <__addsf3+0x24>
 150:	26 f4       	brtc	.+8      	; 0x15a <__addsf3+0x28>
 152:	0c 94 77 01 	jmp	0x2ee	; 0x2ee <__fp_nan>
 156:	0e f4       	brtc	.+2      	; 0x15a <__addsf3+0x28>
 158:	e0 95       	com	r30
 15a:	e7 fb       	bst	r30, 7
 15c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__fp_inf>

00000160 <__addsf3x>:
 160:	e9 2f       	mov	r30, r25
 162:	0e 94 99 01 	call	0x332	; 0x332 <__fp_split3>
 166:	58 f3       	brcs	.-42     	; 0x13e <__addsf3+0xc>
 168:	ba 17       	cp	r27, r26
 16a:	62 07       	cpc	r22, r18
 16c:	73 07       	cpc	r23, r19
 16e:	84 07       	cpc	r24, r20
 170:	95 07       	cpc	r25, r21
 172:	20 f0       	brcs	.+8      	; 0x17c <__addsf3x+0x1c>
 174:	79 f4       	brne	.+30     	; 0x194 <__addsf3x+0x34>
 176:	a6 f5       	brtc	.+104    	; 0x1e0 <__addsf3x+0x80>
 178:	0c 94 bb 01 	jmp	0x376	; 0x376 <__fp_zero>
 17c:	0e f4       	brtc	.+2      	; 0x180 <__addsf3x+0x20>
 17e:	e0 95       	com	r30
 180:	0b 2e       	mov	r0, r27
 182:	ba 2f       	mov	r27, r26
 184:	a0 2d       	mov	r26, r0
 186:	0b 01       	movw	r0, r22
 188:	b9 01       	movw	r22, r18
 18a:	90 01       	movw	r18, r0
 18c:	0c 01       	movw	r0, r24
 18e:	ca 01       	movw	r24, r20
 190:	a0 01       	movw	r20, r0
 192:	11 24       	eor	r1, r1
 194:	ff 27       	eor	r31, r31
 196:	59 1b       	sub	r21, r25
 198:	99 f0       	breq	.+38     	; 0x1c0 <__addsf3x+0x60>
 19a:	59 3f       	cpi	r21, 0xF9	; 249
 19c:	50 f4       	brcc	.+20     	; 0x1b2 <__addsf3x+0x52>
 19e:	50 3e       	cpi	r21, 0xE0	; 224
 1a0:	68 f1       	brcs	.+90     	; 0x1fc <__addsf3x+0x9c>
 1a2:	1a 16       	cp	r1, r26
 1a4:	f0 40       	sbci	r31, 0x00	; 0
 1a6:	a2 2f       	mov	r26, r18
 1a8:	23 2f       	mov	r18, r19
 1aa:	34 2f       	mov	r19, r20
 1ac:	44 27       	eor	r20, r20
 1ae:	58 5f       	subi	r21, 0xF8	; 248
 1b0:	f3 cf       	rjmp	.-26     	; 0x198 <__addsf3x+0x38>
 1b2:	46 95       	lsr	r20
 1b4:	37 95       	ror	r19
 1b6:	27 95       	ror	r18
 1b8:	a7 95       	ror	r26
 1ba:	f0 40       	sbci	r31, 0x00	; 0
 1bc:	53 95       	inc	r21
 1be:	c9 f7       	brne	.-14     	; 0x1b2 <__addsf3x+0x52>
 1c0:	7e f4       	brtc	.+30     	; 0x1e0 <__addsf3x+0x80>
 1c2:	1f 16       	cp	r1, r31
 1c4:	ba 0b       	sbc	r27, r26
 1c6:	62 0b       	sbc	r22, r18
 1c8:	73 0b       	sbc	r23, r19
 1ca:	84 0b       	sbc	r24, r20
 1cc:	ba f0       	brmi	.+46     	; 0x1fc <__addsf3x+0x9c>
 1ce:	91 50       	subi	r25, 0x01	; 1
 1d0:	a1 f0       	breq	.+40     	; 0x1fa <__addsf3x+0x9a>
 1d2:	ff 0f       	add	r31, r31
 1d4:	bb 1f       	adc	r27, r27
 1d6:	66 1f       	adc	r22, r22
 1d8:	77 1f       	adc	r23, r23
 1da:	88 1f       	adc	r24, r24
 1dc:	c2 f7       	brpl	.-16     	; 0x1ce <__addsf3x+0x6e>
 1de:	0e c0       	rjmp	.+28     	; 0x1fc <__addsf3x+0x9c>
 1e0:	ba 0f       	add	r27, r26
 1e2:	62 1f       	adc	r22, r18
 1e4:	73 1f       	adc	r23, r19
 1e6:	84 1f       	adc	r24, r20
 1e8:	48 f4       	brcc	.+18     	; 0x1fc <__addsf3x+0x9c>
 1ea:	87 95       	ror	r24
 1ec:	77 95       	ror	r23
 1ee:	67 95       	ror	r22
 1f0:	b7 95       	ror	r27
 1f2:	f7 95       	ror	r31
 1f4:	9e 3f       	cpi	r25, 0xFE	; 254
 1f6:	08 f0       	brcs	.+2      	; 0x1fa <__addsf3x+0x9a>
 1f8:	b0 cf       	rjmp	.-160    	; 0x15a <__addsf3+0x28>
 1fa:	93 95       	inc	r25
 1fc:	88 0f       	add	r24, r24
 1fe:	08 f0       	brcs	.+2      	; 0x202 <__addsf3x+0xa2>
 200:	99 27       	eor	r25, r25
 202:	ee 0f       	add	r30, r30
 204:	97 95       	ror	r25
 206:	87 95       	ror	r24
 208:	08 95       	ret

0000020a <__fixunssfsi>:
 20a:	0e 94 a1 01 	call	0x342	; 0x342 <__fp_splitA>
 20e:	88 f0       	brcs	.+34     	; 0x232 <__fixunssfsi+0x28>
 210:	9f 57       	subi	r25, 0x7F	; 127
 212:	98 f0       	brcs	.+38     	; 0x23a <__fixunssfsi+0x30>
 214:	b9 2f       	mov	r27, r25
 216:	99 27       	eor	r25, r25
 218:	b7 51       	subi	r27, 0x17	; 23
 21a:	b0 f0       	brcs	.+44     	; 0x248 <__fixunssfsi+0x3e>
 21c:	e1 f0       	breq	.+56     	; 0x256 <__fixunssfsi+0x4c>
 21e:	66 0f       	add	r22, r22
 220:	77 1f       	adc	r23, r23
 222:	88 1f       	adc	r24, r24
 224:	99 1f       	adc	r25, r25
 226:	1a f0       	brmi	.+6      	; 0x22e <__fixunssfsi+0x24>
 228:	ba 95       	dec	r27
 22a:	c9 f7       	brne	.-14     	; 0x21e <__fixunssfsi+0x14>
 22c:	14 c0       	rjmp	.+40     	; 0x256 <__fixunssfsi+0x4c>
 22e:	b1 30       	cpi	r27, 0x01	; 1
 230:	91 f0       	breq	.+36     	; 0x256 <__fixunssfsi+0x4c>
 232:	0e 94 bb 01 	call	0x376	; 0x376 <__fp_zero>
 236:	b1 e0       	ldi	r27, 0x01	; 1
 238:	08 95       	ret
 23a:	0c 94 bb 01 	jmp	0x376	; 0x376 <__fp_zero>
 23e:	67 2f       	mov	r22, r23
 240:	78 2f       	mov	r23, r24
 242:	88 27       	eor	r24, r24
 244:	b8 5f       	subi	r27, 0xF8	; 248
 246:	39 f0       	breq	.+14     	; 0x256 <__fixunssfsi+0x4c>
 248:	b9 3f       	cpi	r27, 0xF9	; 249
 24a:	cc f3       	brlt	.-14     	; 0x23e <__fixunssfsi+0x34>
 24c:	86 95       	lsr	r24
 24e:	77 95       	ror	r23
 250:	67 95       	ror	r22
 252:	b3 95       	inc	r27
 254:	d9 f7       	brne	.-10     	; 0x24c <__fixunssfsi+0x42>
 256:	3e f4       	brtc	.+14     	; 0x266 <__fixunssfsi+0x5c>
 258:	90 95       	com	r25
 25a:	80 95       	com	r24
 25c:	70 95       	com	r23
 25e:	61 95       	neg	r22
 260:	7f 4f       	sbci	r23, 0xFF	; 255
 262:	8f 4f       	sbci	r24, 0xFF	; 255
 264:	9f 4f       	sbci	r25, 0xFF	; 255
 266:	08 95       	ret

00000268 <__floatunsisf>:
 268:	e8 94       	clt
 26a:	09 c0       	rjmp	.+18     	; 0x27e <__floatsisf+0x12>

0000026c <__floatsisf>:
 26c:	97 fb       	bst	r25, 7
 26e:	3e f4       	brtc	.+14     	; 0x27e <__floatsisf+0x12>
 270:	90 95       	com	r25
 272:	80 95       	com	r24
 274:	70 95       	com	r23
 276:	61 95       	neg	r22
 278:	7f 4f       	sbci	r23, 0xFF	; 255
 27a:	8f 4f       	sbci	r24, 0xFF	; 255
 27c:	9f 4f       	sbci	r25, 0xFF	; 255
 27e:	99 23       	and	r25, r25
 280:	a9 f0       	breq	.+42     	; 0x2ac <__floatsisf+0x40>
 282:	f9 2f       	mov	r31, r25
 284:	96 e9       	ldi	r25, 0x96	; 150
 286:	bb 27       	eor	r27, r27
 288:	93 95       	inc	r25
 28a:	f6 95       	lsr	r31
 28c:	87 95       	ror	r24
 28e:	77 95       	ror	r23
 290:	67 95       	ror	r22
 292:	b7 95       	ror	r27
 294:	f1 11       	cpse	r31, r1
 296:	f8 cf       	rjmp	.-16     	; 0x288 <__floatsisf+0x1c>
 298:	fa f4       	brpl	.+62     	; 0x2d8 <__floatsisf+0x6c>
 29a:	bb 0f       	add	r27, r27
 29c:	11 f4       	brne	.+4      	; 0x2a2 <__floatsisf+0x36>
 29e:	60 ff       	sbrs	r22, 0
 2a0:	1b c0       	rjmp	.+54     	; 0x2d8 <__floatsisf+0x6c>
 2a2:	6f 5f       	subi	r22, 0xFF	; 255
 2a4:	7f 4f       	sbci	r23, 0xFF	; 255
 2a6:	8f 4f       	sbci	r24, 0xFF	; 255
 2a8:	9f 4f       	sbci	r25, 0xFF	; 255
 2aa:	16 c0       	rjmp	.+44     	; 0x2d8 <__floatsisf+0x6c>
 2ac:	88 23       	and	r24, r24
 2ae:	11 f0       	breq	.+4      	; 0x2b4 <__floatsisf+0x48>
 2b0:	96 e9       	ldi	r25, 0x96	; 150
 2b2:	11 c0       	rjmp	.+34     	; 0x2d6 <__floatsisf+0x6a>
 2b4:	77 23       	and	r23, r23
 2b6:	21 f0       	breq	.+8      	; 0x2c0 <__floatsisf+0x54>
 2b8:	9e e8       	ldi	r25, 0x8E	; 142
 2ba:	87 2f       	mov	r24, r23
 2bc:	76 2f       	mov	r23, r22
 2be:	05 c0       	rjmp	.+10     	; 0x2ca <__floatsisf+0x5e>
 2c0:	66 23       	and	r22, r22
 2c2:	71 f0       	breq	.+28     	; 0x2e0 <__floatsisf+0x74>
 2c4:	96 e8       	ldi	r25, 0x86	; 134
 2c6:	86 2f       	mov	r24, r22
 2c8:	70 e0       	ldi	r23, 0x00	; 0
 2ca:	60 e0       	ldi	r22, 0x00	; 0
 2cc:	2a f0       	brmi	.+10     	; 0x2d8 <__floatsisf+0x6c>
 2ce:	9a 95       	dec	r25
 2d0:	66 0f       	add	r22, r22
 2d2:	77 1f       	adc	r23, r23
 2d4:	88 1f       	adc	r24, r24
 2d6:	da f7       	brpl	.-10     	; 0x2ce <__floatsisf+0x62>
 2d8:	88 0f       	add	r24, r24
 2da:	96 95       	lsr	r25
 2dc:	87 95       	ror	r24
 2de:	97 f9       	bld	r25, 7
 2e0:	08 95       	ret

000002e2 <__fp_inf>:
 2e2:	97 f9       	bld	r25, 7
 2e4:	9f 67       	ori	r25, 0x7F	; 127
 2e6:	80 e8       	ldi	r24, 0x80	; 128
 2e8:	70 e0       	ldi	r23, 0x00	; 0
 2ea:	60 e0       	ldi	r22, 0x00	; 0
 2ec:	08 95       	ret

000002ee <__fp_nan>:
 2ee:	9f ef       	ldi	r25, 0xFF	; 255
 2f0:	80 ec       	ldi	r24, 0xC0	; 192
 2f2:	08 95       	ret

000002f4 <__fp_pscA>:
 2f4:	00 24       	eor	r0, r0
 2f6:	0a 94       	dec	r0
 2f8:	16 16       	cp	r1, r22
 2fa:	17 06       	cpc	r1, r23
 2fc:	18 06       	cpc	r1, r24
 2fe:	09 06       	cpc	r0, r25
 300:	08 95       	ret

00000302 <__fp_pscB>:
 302:	00 24       	eor	r0, r0
 304:	0a 94       	dec	r0
 306:	12 16       	cp	r1, r18
 308:	13 06       	cpc	r1, r19
 30a:	14 06       	cpc	r1, r20
 30c:	05 06       	cpc	r0, r21
 30e:	08 95       	ret

00000310 <__fp_round>:
 310:	09 2e       	mov	r0, r25
 312:	03 94       	inc	r0
 314:	00 0c       	add	r0, r0
 316:	11 f4       	brne	.+4      	; 0x31c <__fp_round+0xc>
 318:	88 23       	and	r24, r24
 31a:	52 f0       	brmi	.+20     	; 0x330 <__fp_round+0x20>
 31c:	bb 0f       	add	r27, r27
 31e:	40 f4       	brcc	.+16     	; 0x330 <__fp_round+0x20>
 320:	bf 2b       	or	r27, r31
 322:	11 f4       	brne	.+4      	; 0x328 <__fp_round+0x18>
 324:	60 ff       	sbrs	r22, 0
 326:	04 c0       	rjmp	.+8      	; 0x330 <__fp_round+0x20>
 328:	6f 5f       	subi	r22, 0xFF	; 255
 32a:	7f 4f       	sbci	r23, 0xFF	; 255
 32c:	8f 4f       	sbci	r24, 0xFF	; 255
 32e:	9f 4f       	sbci	r25, 0xFF	; 255
 330:	08 95       	ret

00000332 <__fp_split3>:
 332:	57 fd       	sbrc	r21, 7
 334:	90 58       	subi	r25, 0x80	; 128
 336:	44 0f       	add	r20, r20
 338:	55 1f       	adc	r21, r21
 33a:	59 f0       	breq	.+22     	; 0x352 <__fp_splitA+0x10>
 33c:	5f 3f       	cpi	r21, 0xFF	; 255
 33e:	71 f0       	breq	.+28     	; 0x35c <__fp_splitA+0x1a>
 340:	47 95       	ror	r20

00000342 <__fp_splitA>:
 342:	88 0f       	add	r24, r24
 344:	97 fb       	bst	r25, 7
 346:	99 1f       	adc	r25, r25
 348:	61 f0       	breq	.+24     	; 0x362 <__fp_splitA+0x20>
 34a:	9f 3f       	cpi	r25, 0xFF	; 255
 34c:	79 f0       	breq	.+30     	; 0x36c <__fp_splitA+0x2a>
 34e:	87 95       	ror	r24
 350:	08 95       	ret
 352:	12 16       	cp	r1, r18
 354:	13 06       	cpc	r1, r19
 356:	14 06       	cpc	r1, r20
 358:	55 1f       	adc	r21, r21
 35a:	f2 cf       	rjmp	.-28     	; 0x340 <__fp_split3+0xe>
 35c:	46 95       	lsr	r20
 35e:	f1 df       	rcall	.-30     	; 0x342 <__fp_splitA>
 360:	08 c0       	rjmp	.+16     	; 0x372 <__fp_splitA+0x30>
 362:	16 16       	cp	r1, r22
 364:	17 06       	cpc	r1, r23
 366:	18 06       	cpc	r1, r24
 368:	99 1f       	adc	r25, r25
 36a:	f1 cf       	rjmp	.-30     	; 0x34e <__fp_splitA+0xc>
 36c:	86 95       	lsr	r24
 36e:	71 05       	cpc	r23, r1
 370:	61 05       	cpc	r22, r1
 372:	08 94       	sec
 374:	08 95       	ret

00000376 <__fp_zero>:
 376:	e8 94       	clt

00000378 <__fp_szero>:
 378:	bb 27       	eor	r27, r27
 37a:	66 27       	eor	r22, r22
 37c:	77 27       	eor	r23, r23
 37e:	cb 01       	movw	r24, r22
 380:	97 f9       	bld	r25, 7
 382:	08 95       	ret

00000384 <__mulsf3>:
 384:	0e 94 d5 01 	call	0x3aa	; 0x3aa <__mulsf3x>
 388:	0c 94 88 01 	jmp	0x310	; 0x310 <__fp_round>
 38c:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <__fp_pscA>
 390:	38 f0       	brcs	.+14     	; 0x3a0 <__mulsf3+0x1c>
 392:	0e 94 81 01 	call	0x302	; 0x302 <__fp_pscB>
 396:	20 f0       	brcs	.+8      	; 0x3a0 <__mulsf3+0x1c>
 398:	95 23       	and	r25, r21
 39a:	11 f0       	breq	.+4      	; 0x3a0 <__mulsf3+0x1c>
 39c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__fp_inf>
 3a0:	0c 94 77 01 	jmp	0x2ee	; 0x2ee <__fp_nan>
 3a4:	11 24       	eor	r1, r1
 3a6:	0c 94 bc 01 	jmp	0x378	; 0x378 <__fp_szero>

000003aa <__mulsf3x>:
 3aa:	0e 94 99 01 	call	0x332	; 0x332 <__fp_split3>
 3ae:	70 f3       	brcs	.-36     	; 0x38c <__mulsf3+0x8>

000003b0 <__mulsf3_pse>:
 3b0:	95 9f       	mul	r25, r21
 3b2:	c1 f3       	breq	.-16     	; 0x3a4 <__mulsf3+0x20>
 3b4:	95 0f       	add	r25, r21
 3b6:	50 e0       	ldi	r21, 0x00	; 0
 3b8:	55 1f       	adc	r21, r21
 3ba:	62 9f       	mul	r22, r18
 3bc:	f0 01       	movw	r30, r0
 3be:	72 9f       	mul	r23, r18
 3c0:	bb 27       	eor	r27, r27
 3c2:	f0 0d       	add	r31, r0
 3c4:	b1 1d       	adc	r27, r1
 3c6:	63 9f       	mul	r22, r19
 3c8:	aa 27       	eor	r26, r26
 3ca:	f0 0d       	add	r31, r0
 3cc:	b1 1d       	adc	r27, r1
 3ce:	aa 1f       	adc	r26, r26
 3d0:	64 9f       	mul	r22, r20
 3d2:	66 27       	eor	r22, r22
 3d4:	b0 0d       	add	r27, r0
 3d6:	a1 1d       	adc	r26, r1
 3d8:	66 1f       	adc	r22, r22
 3da:	82 9f       	mul	r24, r18
 3dc:	22 27       	eor	r18, r18
 3de:	b0 0d       	add	r27, r0
 3e0:	a1 1d       	adc	r26, r1
 3e2:	62 1f       	adc	r22, r18
 3e4:	73 9f       	mul	r23, r19
 3e6:	b0 0d       	add	r27, r0
 3e8:	a1 1d       	adc	r26, r1
 3ea:	62 1f       	adc	r22, r18
 3ec:	83 9f       	mul	r24, r19
 3ee:	a0 0d       	add	r26, r0
 3f0:	61 1d       	adc	r22, r1
 3f2:	22 1f       	adc	r18, r18
 3f4:	74 9f       	mul	r23, r20
 3f6:	33 27       	eor	r19, r19
 3f8:	a0 0d       	add	r26, r0
 3fa:	61 1d       	adc	r22, r1
 3fc:	23 1f       	adc	r18, r19
 3fe:	84 9f       	mul	r24, r20
 400:	60 0d       	add	r22, r0
 402:	21 1d       	adc	r18, r1
 404:	82 2f       	mov	r24, r18
 406:	76 2f       	mov	r23, r22
 408:	6a 2f       	mov	r22, r26
 40a:	11 24       	eor	r1, r1
 40c:	9f 57       	subi	r25, 0x7F	; 127
 40e:	50 40       	sbci	r21, 0x00	; 0
 410:	9a f0       	brmi	.+38     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 412:	f1 f0       	breq	.+60     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 414:	88 23       	and	r24, r24
 416:	4a f0       	brmi	.+18     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 418:	ee 0f       	add	r30, r30
 41a:	ff 1f       	adc	r31, r31
 41c:	bb 1f       	adc	r27, r27
 41e:	66 1f       	adc	r22, r22
 420:	77 1f       	adc	r23, r23
 422:	88 1f       	adc	r24, r24
 424:	91 50       	subi	r25, 0x01	; 1
 426:	50 40       	sbci	r21, 0x00	; 0
 428:	a9 f7       	brne	.-22     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 42a:	9e 3f       	cpi	r25, 0xFE	; 254
 42c:	51 05       	cpc	r21, r1
 42e:	80 f0       	brcs	.+32     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 430:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__fp_inf>
 434:	0c 94 bc 01 	jmp	0x378	; 0x378 <__fp_szero>
 438:	5f 3f       	cpi	r21, 0xFF	; 255
 43a:	e4 f3       	brlt	.-8      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 43c:	98 3e       	cpi	r25, 0xE8	; 232
 43e:	d4 f3       	brlt	.-12     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 440:	86 95       	lsr	r24
 442:	77 95       	ror	r23
 444:	67 95       	ror	r22
 446:	b7 95       	ror	r27
 448:	f7 95       	ror	r31
 44a:	e7 95       	ror	r30
 44c:	9f 5f       	subi	r25, 0xFF	; 255
 44e:	c1 f7       	brne	.-16     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 450:	fe 2b       	or	r31, r30
 452:	88 0f       	add	r24, r24
 454:	91 1d       	adc	r25, r1
 456:	96 95       	lsr	r25
 458:	87 95       	ror	r24
 45a:	97 f9       	bld	r25, 7
 45c:	08 95       	ret

0000045e <_exit>:
 45e:	f8 94       	cli

00000460 <__stop_program>:
 460:	ff cf       	rjmp	.-2      	; 0x460 <__stop_program>
